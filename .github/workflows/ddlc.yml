# 在这里定义工作流程的名称
name: DDLC Mod 生成

# 在这里定义触发工作流程的事件组
on:
  push:
  pull_request:
  release:
    types: [created]

# 定义作业和它的步骤
jobs:
  build:
    name: 使用 Ren'Py SDK 生成
    runs-on: ubuntu-latest

    steps:
      - name: 克隆 repo
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: 获取 DDLC 的数据文件
        uses: Dobby233Liu/mc-action@master

      - name: 下载字体
        run: |
             wget -O font.zip "https://drive.google.com/u/0/uc?export=download&id=1LClyzgxq-les-N5egLXm1aK7ULATDpex"
             unzip -d game/mod_assets/font/ -j -o fontv12.zip
             rm fontv12.zip

      # 确保代码可行
      - name: 检查 Mod 脚本
        uses: ProjectAliceDev/renpy-lint-action@v1.1.0
        with:
          sdk-version: '6.99.12.4'
          project-dir: .
        env:
          # GitHub Actions 环境下没有 GUI
          SDL_AUDIODRIVER: dummy
          SDL_VIDEODRIVER: dummy

      # 生成项目
      - name: 生成 DDLC Mod
        uses: ProjectAliceDev/renpy-build-action@v1.1.1
        # 定义一个 ID 以便之后使用
        id: buildseq
        with:
          sdk-version: '6.99.12.4'
          project-dir: .
        env:
          SDL_AUDIODRIVER: dummy
          SDL_VIDEODRIVER: dummy

      # 将生成的 zip 上传
      - name: 上传生成的 zip 到 GitHub Actions
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.buildseq.outputs.dir }}
          path: ${{ format('{0}/{1}-Mod.zip', steps.buildseq.outputs.dir, steps.buildseq.outputs.version) }}

      # 用这个步骤将生成的 zip 上传到一个刚创建的 Release 里
      # 有了这个，Release 的 Assets 模式也改变了
      # DDLCModTempCN-*-Mod.zip 是 Demo，Source code (zip) 是模板
      - name: 上传生成的 zip 到 Release
        uses: skx/github-action-publish-binaries@master
        if: github.event.release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ format('{0}/{1}-Mod.zip', steps.buildseq.outputs.dir, steps.buildseq.outputs.version) }}
